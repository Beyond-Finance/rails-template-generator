  puts "\nConfiguring Code Climate"
  create_file '.code_climate.yml', <<-CODECLIMATE
version: "2"
plugins:
  bundler-audit:
    enabled: true
<% if @template.ui? %>
  csslint:
    enabled: true
  eslint:
    enabled: true
<% end %>
  fixme:
    enabled: true
    config:
      strings:
      - TODO
  rubocop:
    enabled: true
    # Locked channel/version to make sure it matches with version in the Gemfile. Update both when updating one.
    # Find available versions here: https://github.com/codeclimate/codeclimate-rubocop/branches/all?utf8=%E2%9C%93&query=channel%2Frubocop
    channel: rubocop-1-18-3
<% if @template.ui? %>
  stylelint:
    enabled: true
<% end %>

exclude_patterns:
  - "config/"
  - "db/"
  - "dist/"
  - "features/"
  - "**/node_modules/"
  - "script/"
  - "**/spec/"
  - "**/test/"
  - "**/tests/"
  - "Tests/"
  - "**/vendor/"
  - "**/*_test.go"
  - "**/*.d.ts"
  CODECLIMATE

  puts "\nConfiguring CircleCI"
  cache_key = '{{ checksum "Gemfile.lock" }}<%= '-{{ checksum "yarn.lock" }}'.html_safe if @template.ui? %>'

  create_file '.circleci/config.yml', <<-CIRCLECI
version: 2

references:
  default_docker_ruby_executor: &default_docker_ruby_executor
    image: circleci/ruby:#{RUBY_VERSION}-node-browsers
    environment:
      BUNDLE_PATH: vendor/bundle
<% if @template.db? %>
      PGHOST: 127.0.0.1
      PGUSER: #{app_name}
<% end %>
      RAILS_ENV: test
      COVERAGE: true
      TZ: /usr/share/zoneinfo/America/Chicago
<% if @template.db? %>
  postgres: &postgres
    image: circleci/postgres:11.4-alpine
    environment:
      POSTGRES_DB: #{app_name}_test
      POSTGRES_USER: #{app_name}
<% end %>

jobs:
  build:
    working_directory: ~/#{app_name}/#{app_name}_index
    docker:
      - *default_docker_ruby_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - #{app_name}-#{cache_key}
            - #{app_name}-
<% if @template.ui? %>
      - run:
          name: yarn install
          command: yarn install
<% end %>
      - run:
          name: Bundle Install
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler
            bundle check || bundle install
      - save_cache:
          key: #{app_name}-#{cache_key}
          paths:
<% if @template.ui? %>
            - ~/#{app_name}/#{app_name}_index/node_modules
<% end %>
            - ~/#{app_name}/#{app_name}_index/vendor/bundle

  rspec_test:
    working_directory: ~/#{app_name}/#{app_name}_index
    parallelism: 1
    docker:
      - *default_docker_ruby_executor
      - *postgres
    steps:
      - checkout
      - restore_cache:
          keys:
            - #{app_name}-#{cache_key}
            - #{app_name}-
      - run:
          name: Bundle Install
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler
            bundle check || bundle install
      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
<% if @template.db? %>
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: |
            bundle exec rails db:setup --trace
<% end%>
<% if @template.ui? %>
      - run:
          name: Compile webpacker manifest and files
          command: |
            bundle exec rails webpacker:compile
<% end %>
      - run:
          name: Run RSpec
          command: |
            mkdir /tmp/test-results
            ./cc-test-reporter before-build
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec $TESTFILES --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml --format progress
      - run:
          name: Code Climate Test Coverage
          command: |
            ./cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"

      - persist_to_workspace:
          root: coverage
          paths:
            - codeclimate.*.json
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
  
  brakeman:
    working_directory: ~/#{app_name}/#{app_name}_index
    parallelism: 1
    docker:
      - *default_docker_ruby_executor
      - *postgres
    steps:
      - checkout
      - restore_cache:
          keys:
            - #{app_name}-#{cache_key}
            - #{app_name}-
      - run:
          name: Bundle Install
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler
            bundle check || bundle install
      - run:
          name: brakeman
          command: |
            bundle exec brakeman

<% if @template.ui? %>
  wcag_test:
    working_directory: ~/#{app_name}/#{app_name}_index
    parallelism: 1
    docker:
      - *default_docker_ruby_executor
      - *postgres
    steps:
      - checkout
      - restore_cache:
          keys:
            - #{app_name}-#{cache_key}
            - #{app_name}-
<% if @template.db? %>
      - run:
          name: Install postgresql-client
          command: sudo apt update; sudo apt install -y postgresql-client || true
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: |
            bundle exec rails db:setup --trace
<% end %>
      - run:
          name: Compile webpacker manifest and files
          command: |
            bundle exec rails webpacker:compile
      - run:
          name: Run RSpec (wcag)
          command: |
            mkdir /tmp/wcag-test-results
            SIMPLECOV=off bundle exec rspec spec/features --tag wcag --format RspecJunitFormatter --out /tmp/wcag-test-results/rspec.xml --format progress
      - store_test_results:
          path: /tmp/wcag-test-results
      - store_artifacts:
          path: /tmp/wcag-test-results
          destination: wcag-test-results

  yarn_test:
    working_directory: ~/#{app_name}/#{app_name}_index
    docker:
      - *default_docker_ruby_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - #{app_name}-#{cache_key}
            - #{app_name}-
      - run:
          name: yarn test
          command: yarn jest --ci --passWithNoTests --runInBand --reporters=default --reporters=jest-junit
      - store_test_results:
          path: /tmp/junit
      - store_artifacts:
          path: /tmp/junit
<% end %>

  upload-coverage:
    working_directory: ~/#{app_name}/#{app_name}_index
    docker:
      - *default_docker_ruby_executor
    environment:
      CC_TEST_REPORTER_ID: TODO_REPLACE_WITH_CC_TEST_REPORTER_ID
    steps:
      - attach_workspace:
          at: ~/#{app_name}/#{app_name}_index
      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Combine and Upload Coverage
          command: |
            ./cc-test-reporter sum-coverage --output - codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input -
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - rspec_test:
          requires:
            - build
      - brakeman:
          requires:
            - build
<% if @template.ui? %>
      - wcag_test:
          requires:
            - build
      - yarn_test:
          requires:
            - build
<% end %>
      - upload-coverage:
          requires:
             - test
  CIRCLECI
